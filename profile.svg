<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1034" onload="init(evt)" viewBox="0 0 1200 1034" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1034" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python ./breadth_first_search.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1023.00"> </text><svg id="frames" x="10" width="1180" total_samples="3793"><g><title>main (breadth_first_search.py:217) (10 samples, 0.26%)</title><rect x="0.0000%" y="84" width="0.2636%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="10"/><text x="0.2500%" y="94.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3424) (6 samples, 0.16%)</title><rect x="0.5009%" y="100" width="0.1582%" height="15" fill="rgb(217,0,24)" fg:x="19" fg:w="6"/><text x="0.7509%" y="110.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3427) (4 samples, 0.11%)</title><rect x="0.6855%" y="100" width="0.1055%" height="15" fill="rgb(221,193,54)" fg:x="26" fg:w="4"/><text x="0.9355%" y="110.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:5701) (5 samples, 0.13%)</title><rect x="0.9491%" y="148" width="0.1318%" height="15" fill="rgb(248,212,6)" fg:x="36" fg:w="5"/><text x="1.1991%" y="158.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3359) (7 samples, 0.18%)</title><rect x="0.9228%" y="132" width="0.1846%" height="15" fill="rgb(208,68,35)" fg:x="35" fg:w="7"/><text x="1.1728%" y="142.50"></text></g><g><title>_get_value (pandas/core/series.py:1051) (13 samples, 0.34%)</title><rect x="0.8437%" y="116" width="0.3427%" height="15" fill="rgb(232,128,0)" fg:x="32" fg:w="13"/><text x="1.0937%" y="126.50"></text></g><g><title>main (breadth_first_search.py:248) (34 samples, 0.90%)</title><rect x="0.3955%" y="84" width="0.8964%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="34"/><text x="0.6455%" y="94.50"></text></g><g><title>__getitem__ (pandas/core/series.py:942) (17 samples, 0.45%)</title><rect x="0.8437%" y="100" width="0.4482%" height="15" fill="rgb(228,23,34)" fg:x="32" fg:w="17"/><text x="1.0937%" y="110.50"></text></g><g><title>_get_value (pandas/core/series.py:1052) (4 samples, 0.11%)</title><rect x="1.1864%" y="116" width="0.1055%" height="15" fill="rgb(218,30,26)" fg:x="45" fg:w="4"/><text x="1.4364%" y="126.50"></text></g><g><title>_get_values_for_loc (pandas/core/indexes/base.py:5185) (4 samples, 0.11%)</title><rect x="1.1864%" y="132" width="0.1055%" height="15" fill="rgb(220,122,19)" fg:x="45" fg:w="4"/><text x="1.4364%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3424) (4 samples, 0.11%)</title><rect x="1.5291%" y="148" width="0.1055%" height="15" fill="rgb(250,228,42)" fg:x="58" fg:w="4"/><text x="1.7791%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3427) (4 samples, 0.11%)</title><rect x="1.6346%" y="148" width="0.1055%" height="15" fill="rgb(240,193,28)" fg:x="62" fg:w="4"/><text x="1.8846%" y="158.50"></text></g><g><title>breath_first_search (breadth_first_search.py:188) (25 samples, 0.66%)</title><rect x="1.3973%" y="116" width="0.6591%" height="15" fill="rgb(216,20,37)" fg:x="53" fg:w="25"/><text x="1.6473%" y="126.50"></text></g><g><title>is_not_barrier (breadth_first_search.py:141) (23 samples, 0.61%)</title><rect x="1.4500%" y="132" width="0.6064%" height="15" fill="rgb(206,188,39)" fg:x="55" fg:w="23"/><text x="1.7000%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/series.py:942) (7 samples, 0.18%)</title><rect x="1.8719%" y="148" width="0.1846%" height="15" fill="rgb(217,207,13)" fg:x="71" fg:w="7"/><text x="2.1219%" y="158.50"></text></g><g><title>_get_value (pandas/core/series.py:1052) (4 samples, 0.11%)</title><rect x="1.9510%" y="164" width="0.1055%" height="15" fill="rgb(231,73,38)" fg:x="74" fg:w="4"/><text x="2.2010%" y="174.50"></text></g><g><title>main (breadth_first_search.py:294) (27 samples, 0.71%)</title><rect x="1.3709%" y="84" width="0.7118%" height="15" fill="rgb(225,20,46)" fg:x="52" fg:w="27"/><text x="1.6209%" y="94.50"></text></g><g><title>find_path (breadth_first_search.py:40) (27 samples, 0.71%)</title><rect x="1.3709%" y="100" width="0.7118%" height="15" fill="rgb(210,31,41)" fg:x="52" fg:w="27"/><text x="1.6209%" y="110.50"></text></g><g><title>breath_first_search (breadth_first_search.py:184) (11 samples, 0.29%)</title><rect x="2.3201%" y="132" width="0.2900%" height="15" fill="rgb(221,200,47)" fg:x="88" fg:w="11"/><text x="2.5701%" y="142.50"></text></g><g><title>get_neighbors (breadth_first_search.py:145) (7 samples, 0.18%)</title><rect x="2.8737%" y="148" width="0.1846%" height="15" fill="rgb(226,26,5)" fg:x="109" fg:w="7"/><text x="3.1237%" y="158.50"></text></g><g><title>in_bounds (breadth_first_search.py:138) (17 samples, 0.45%)</title><rect x="3.3483%" y="148" width="0.4482%" height="15" fill="rgb(249,33,26)" fg:x="127" fg:w="17"/><text x="3.5983%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3419) (13 samples, 0.34%)</title><rect x="4.2974%" y="164" width="0.3427%" height="15" fill="rgb(235,183,28)" fg:x="163" fg:w="13"/><text x="4.5474%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3420) (10 samples, 0.26%)</title><rect x="4.6401%" y="164" width="0.2636%" height="15" fill="rgb(221,5,38)" fg:x="176" fg:w="10"/><text x="4.8901%" y="174.50"></text></g><g><title>apply_if_callable (pandas/core/common.py:357) (4 samples, 0.11%)</title><rect x="4.7983%" y="180" width="0.1055%" height="15" fill="rgb(247,18,42)" fg:x="182" fg:w="4"/><text x="5.0483%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3422) (9 samples, 0.24%)</title><rect x="4.9038%" y="164" width="0.2373%" height="15" fill="rgb(241,131,45)" fg:x="186" fg:w="9"/><text x="5.1538%" y="174.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1597) (12 samples, 0.32%)</title><rect x="6.2747%" y="212" width="0.3164%" height="15" fill="rgb(249,31,29)" fg:x="238" fg:w="12"/><text x="6.5247%" y="222.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/dtypes/common.py:156) (8 samples, 0.21%)</title><rect x="6.3802%" y="228" width="0.2109%" height="15" fill="rgb(225,111,53)" fg:x="242" fg:w="8"/><text x="6.6302%" y="238.50"></text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:199) (42 samples, 1.11%)</title><rect x="5.6156%" y="180" width="1.1073%" height="15" fill="rgb(238,160,17)" fg:x="213" fg:w="42"/><text x="5.8656%" y="190.50"></text></g><g><title>is_integer_dtype (pandas/core/dtypes/common.py:722) (31 samples, 0.82%)</title><rect x="5.9056%" y="196" width="0.8173%" height="15" fill="rgb(214,148,48)" fg:x="224" fg:w="31"/><text x="6.1556%" y="206.50"></text></g><g><title>classes_and_not_datetimelike (pandas/core/dtypes/common.py:154) (5 samples, 0.13%)</title><rect x="6.5911%" y="212" width="0.1318%" height="15" fill="rgb(232,36,49)" fg:x="250" fg:w="5"/><text x="6.8411%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3424) (76 samples, 2.00%)</title><rect x="5.1410%" y="164" width="2.0037%" height="15" fill="rgb(209,103,24)" fg:x="195" fg:w="76"/><text x="5.3910%" y="174.50">_..</text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:207) (10 samples, 0.26%)</title><rect x="6.8811%" y="180" width="0.2636%" height="15" fill="rgb(229,88,8)" fg:x="261" fg:w="10"/><text x="7.1311%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3425) (7 samples, 0.18%)</title><rect x="7.1447%" y="164" width="0.1846%" height="15" fill="rgb(213,181,19)" fg:x="271" fg:w="7"/><text x="7.3947%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3427) (9 samples, 0.24%)</title><rect x="7.3293%" y="164" width="0.2373%" height="15" fill="rgb(254,191,54)" fg:x="278" fg:w="9"/><text x="7.5793%" y="174.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:3874) (4 samples, 0.11%)</title><rect x="7.4611%" y="180" width="0.1055%" height="15" fill="rgb(241,83,37)" fg:x="283" fg:w="4"/><text x="7.7111%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/series.py:929) (8 samples, 0.21%)</title><rect x="7.5666%" y="164" width="0.2109%" height="15" fill="rgb(233,36,39)" fg:x="287" fg:w="8"/><text x="7.8166%" y="174.50"></text></g><g><title>apply_if_callable (pandas/core/common.py:357) (5 samples, 0.13%)</title><rect x="7.6457%" y="180" width="0.1318%" height="15" fill="rgb(226,3,54)" fg:x="290" fg:w="5"/><text x="7.8957%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/series.py:938) (14 samples, 0.37%)</title><rect x="7.9357%" y="164" width="0.3691%" height="15" fill="rgb(245,192,40)" fg:x="301" fg:w="14"/><text x="8.1857%" y="174.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:5701) (13 samples, 0.34%)</title><rect x="8.8848%" y="212" width="0.3427%" height="15" fill="rgb(238,167,29)" fg:x="337" fg:w="13"/><text x="9.1348%" y="222.50"></text></g><g><title>is_floating (pandas/core/indexes/base.py:2172) (9 samples, 0.24%)</title><rect x="8.9902%" y="228" width="0.2373%" height="15" fill="rgb(232,182,51)" fg:x="341" fg:w="9"/><text x="9.2402%" y="238.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3359) (23 samples, 0.61%)</title><rect x="8.8057%" y="196" width="0.6064%" height="15" fill="rgb(231,60,39)" fg:x="334" fg:w="23"/><text x="9.0557%" y="206.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:5702) (7 samples, 0.18%)</title><rect x="9.2275%" y="212" width="0.1846%" height="15" fill="rgb(208,69,12)" fg:x="350" fg:w="7"/><text x="9.4775%" y="222.50"></text></g><g><title>_get_value (pandas/core/series.py:1051) (52 samples, 1.37%)</title><rect x="8.4102%" y="180" width="1.3709%" height="15" fill="rgb(235,93,37)" fg:x="319" fg:w="52"/><text x="8.6602%" y="190.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3361) (14 samples, 0.37%)</title><rect x="9.4121%" y="196" width="0.3691%" height="15" fill="rgb(213,116,39)" fg:x="357" fg:w="14"/><text x="9.6621%" y="206.50"></text></g><g><title>_get_values_for_loc (pandas/core/indexes/base.py:5184) (4 samples, 0.11%)</title><rect x="9.9657%" y="196" width="0.1055%" height="15" fill="rgb(222,207,29)" fg:x="378" fg:w="4"/><text x="10.2157%" y="206.50"></text></g><g><title>breath_first_search (breadth_first_search.py:188) (305 samples, 8.04%)</title><rect x="2.6101%" y="132" width="8.0411%" height="15" fill="rgb(206,96,30)" fg:x="99" fg:w="305"/><text x="2.8601%" y="142.50">breath_firs..</text></g><g><title>is_not_barrier (breadth_first_search.py:141) (260 samples, 6.85%)</title><rect x="3.7965%" y="148" width="6.8547%" height="15" fill="rgb(218,138,4)" fg:x="144" fg:w="260"/><text x="4.0465%" y="158.50">is_not_ba..</text></g><g><title>__getitem__ (pandas/core/series.py:942) (89 samples, 2.35%)</title><rect x="8.3048%" y="164" width="2.3464%" height="15" fill="rgb(250,191,14)" fg:x="315" fg:w="89"/><text x="8.5548%" y="174.50">_..</text></g><g><title>_get_value (pandas/core/series.py:1052) (33 samples, 0.87%)</title><rect x="9.7812%" y="180" width="0.8700%" height="15" fill="rgb(239,60,40)" fg:x="371" fg:w="33"/><text x="10.0312%" y="190.50"></text></g><g><title>_get_values_for_loc (pandas/core/indexes/base.py:5185) (22 samples, 0.58%)</title><rect x="10.0712%" y="196" width="0.5800%" height="15" fill="rgb(206,27,48)" fg:x="382" fg:w="22"/><text x="10.3212%" y="206.50"></text></g><g><title>_values (pandas/core/series.py:706) (11 samples, 0.29%)</title><rect x="10.3612%" y="212" width="0.2900%" height="15" fill="rgb(225,35,8)" fg:x="393" fg:w="11"/><text x="10.6112%" y="222.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:1676) (9 samples, 0.24%)</title><rect x="10.4139%" y="228" width="0.2373%" height="15" fill="rgb(250,213,24)" fg:x="395" fg:w="9"/><text x="10.6639%" y="238.50"></text></g><g><title>_block (pandas/core/internals/managers.py:1621) (5 samples, 0.13%)</title><rect x="10.5194%" y="244" width="0.1318%" height="15" fill="rgb(247,123,22)" fg:x="399" fg:w="5"/><text x="10.7694%" y="254.50"></text></g><g><title>breath_first_search (breadth_first_search.py:190) (4 samples, 0.11%)</title><rect x="10.7039%" y="132" width="0.1055%" height="15" fill="rgb(231,138,38)" fg:x="406" fg:w="4"/><text x="10.9539%" y="142.50"></text></g><g><title>find_path (breadth_first_search.py:40) (328 samples, 8.65%)</title><rect x="2.1882%" y="116" width="8.6475%" height="15" fill="rgb(231,145,46)" fg:x="83" fg:w="328"/><text x="2.4382%" y="126.50">find_path (b..</text></g><g><title>breath_first_search (breadth_first_search.py:181) (26 samples, 0.69%)</title><rect x="10.8358%" y="132" width="0.6855%" height="15" fill="rgb(251,118,11)" fg:x="411" fg:w="26"/><text x="11.0858%" y="142.50"></text></g><g><title>is_empty (breadth_first_search.py:170) (18 samples, 0.47%)</title><rect x="11.0467%" y="148" width="0.4746%" height="15" fill="rgb(217,147,25)" fg:x="419" fg:w="18"/><text x="11.2967%" y="158.50"></text></g><g><title>breath_first_search (breadth_first_search.py:182) (24 samples, 0.63%)</title><rect x="11.5212%" y="132" width="0.6327%" height="15" fill="rgb(247,81,37)" fg:x="437" fg:w="24"/><text x="11.7712%" y="142.50"></text></g><g><title>get_next_point (breadth_first_search.py:164) (12 samples, 0.32%)</title><rect x="11.8376%" y="148" width="0.3164%" height="15" fill="rgb(209,12,38)" fg:x="449" fg:w="12"/><text x="12.0876%" y="158.50"></text></g><g><title>breath_first_search (breadth_first_search.py:184) (15 samples, 0.40%)</title><rect x="12.1540%" y="132" width="0.3955%" height="15" fill="rgb(227,1,9)" fg:x="461" fg:w="15"/><text x="12.4040%" y="142.50"></text></g><g><title>get_neighbors (breadth_first_search.py:145) (37 samples, 0.98%)</title><rect x="16.2668%" y="148" width="0.9755%" height="15" fill="rgb(248,47,43)" fg:x="617" fg:w="37"/><text x="16.5168%" y="158.50"></text></g><g><title>get_neighbors (breadth_first_search.py:148) (40 samples, 1.05%)</title><rect x="17.2950%" y="148" width="1.0546%" height="15" fill="rgb(221,10,30)" fg:x="656" fg:w="40"/><text x="17.5450%" y="158.50"></text></g><g><title>get_neighbors (breadth_first_search.py:150) (4 samples, 0.11%)</title><rect x="18.3496%" y="148" width="0.1055%" height="15" fill="rgb(210,229,1)" fg:x="696" fg:w="4"/><text x="18.5996%" y="158.50"></text></g><g><title>get_neighbors (breadth_first_search.py:151) (10 samples, 0.26%)</title><rect x="18.4550%" y="148" width="0.2636%" height="15" fill="rgb(222,148,37)" fg:x="700" fg:w="10"/><text x="18.7050%" y="158.50"></text></g><g><title>get_neighbors (breadth_first_search.py:152) (27 samples, 0.71%)</title><rect x="18.7187%" y="148" width="0.7118%" height="15" fill="rgb(234,67,33)" fg:x="710" fg:w="27"/><text x="18.9687%" y="158.50"></text></g><g><title>get_neighbors (breadth_first_search.py:153) (22 samples, 0.58%)</title><rect x="19.4305%" y="148" width="0.5800%" height="15" fill="rgb(247,98,35)" fg:x="737" fg:w="22"/><text x="19.6805%" y="158.50"></text></g><g><title>get_neighbors (breadth_first_search.py:154) (12 samples, 0.32%)</title><rect x="20.0105%" y="148" width="0.3164%" height="15" fill="rgb(247,138,52)" fg:x="759" fg:w="12"/><text x="20.2605%" y="158.50"></text></g><g><title>in_bounds (breadth_first_search.py:137) (16 samples, 0.42%)</title><rect x="20.4060%" y="148" width="0.4218%" height="15" fill="rgb(213,79,30)" fg:x="774" fg:w="16"/><text x="20.6560%" y="158.50"></text></g><g><title>in_bounds (breadth_first_search.py:138) (144 samples, 3.80%)</title><rect x="20.8278%" y="148" width="3.7965%" height="15" fill="rgb(246,177,23)" fg:x="790" fg:w="144"/><text x="21.0778%" y="158.50">in_b..</text></g><g><title>__getitem__ (pandas/core/frame.py:3419) (59 samples, 1.56%)</title><rect x="27.8408%" y="164" width="1.5555%" height="15" fill="rgb(230,62,27)" fg:x="1056" fg:w="59"/><text x="28.0908%" y="174.50"></text></g><g><title>apply_if_callable (pandas/core/common.py:357) (14 samples, 0.37%)</title><rect x="31.0308%" y="180" width="0.3691%" height="15" fill="rgb(216,154,8)" fg:x="1177" fg:w="14"/><text x="31.2808%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3420) (77 samples, 2.03%)</title><rect x="29.3963%" y="164" width="2.0301%" height="15" fill="rgb(244,35,45)" fg:x="1115" fg:w="77"/><text x="29.6463%" y="174.50">_..</text></g><g><title>is_hashable (pandas/core/dtypes/inference.py:352) (27 samples, 0.71%)</title><rect x="32.4018%" y="180" width="0.7118%" height="15" fill="rgb(251,115,12)" fg:x="1229" fg:w="27"/><text x="32.6518%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3422) (68 samples, 1.79%)</title><rect x="31.4263%" y="164" width="1.7928%" height="15" fill="rgb(240,54,50)" fg:x="1192" fg:w="68"/><text x="31.6763%" y="174.50">_..</text></g><g><title>is_hashable (pandas/core/dtypes/inference.py:356) (4 samples, 0.11%)</title><rect x="33.1136%" y="180" width="0.1055%" height="15" fill="rgb(233,84,52)" fg:x="1256" fg:w="4"/><text x="33.3636%" y="190.50"></text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:195) (4 samples, 0.11%)</title><rect x="38.8347%" y="180" width="0.1055%" height="15" fill="rgb(207,117,47)" fg:x="1473" fg:w="4"/><text x="39.0847%" y="190.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1592) (19 samples, 0.50%)</title><rect x="44.3448%" y="212" width="0.5009%" height="15" fill="rgb(249,43,39)" fg:x="1682" fg:w="19"/><text x="44.5948%" y="222.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1596) (92 samples, 2.43%)</title><rect x="44.8458%" y="212" width="2.4255%" height="15" fill="rgb(209,38,44)" fg:x="1701" fg:w="92"/><text x="45.0958%" y="222.50">_i..</text></g><g><title>&lt;lambda&gt; (pandas/core/dtypes/common.py:155) (27 samples, 0.71%)</title><rect x="48.3522%" y="228" width="0.7118%" height="15" fill="rgb(236,212,23)" fg:x="1834" fg:w="27"/><text x="48.6022%" y="238.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1597) (138 samples, 3.64%)</title><rect x="47.2713%" y="212" width="3.6383%" height="15" fill="rgb(242,79,21)" fg:x="1793" fg:w="138"/><text x="47.5213%" y="222.50">_is_..</text></g><g><title>&lt;lambda&gt; (pandas/core/dtypes/common.py:156) (70 samples, 1.85%)</title><rect x="49.0641%" y="228" width="1.8455%" height="15" fill="rgb(211,96,35)" fg:x="1861" fg:w="70"/><text x="49.3141%" y="238.50">&lt;..</text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:199) (503 samples, 13.26%)</title><rect x="38.9402%" y="180" width="13.2613%" height="15" fill="rgb(253,215,40)" fg:x="1477" fg:w="503"/><text x="39.1902%" y="190.50">__contains__ (pandas..</text></g><g><title>is_integer_dtype (pandas/core/dtypes/common.py:722) (442 samples, 11.65%)</title><rect x="40.5484%" y="196" width="11.6530%" height="15" fill="rgb(211,81,21)" fg:x="1538" fg:w="442"/><text x="40.7984%" y="206.50">is_integer_dtype ..</text></g><g><title>classes_and_not_datetimelike (pandas/core/dtypes/common.py:154) (47 samples, 1.24%)</title><rect x="50.9623%" y="212" width="1.2391%" height="15" fill="rgb(208,190,38)" fg:x="1933" fg:w="47"/><text x="51.2123%" y="222.50"></text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:202) (20 samples, 0.53%)</title><rect x="52.2014%" y="180" width="0.5273%" height="15" fill="rgb(235,213,38)" fg:x="1980" fg:w="20"/><text x="52.4514%" y="190.50"></text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:204) (21 samples, 0.55%)</title><rect x="52.7814%" y="180" width="0.5537%" height="15" fill="rgb(237,122,38)" fg:x="2002" fg:w="21"/><text x="53.0314%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3424) (869 samples, 22.91%)</title><rect x="33.2191%" y="164" width="22.9106%" height="15" fill="rgb(244,218,35)" fg:x="1260" fg:w="869"/><text x="33.4691%" y="174.50">__getitem__ (pandas/core/frame.py:34..</text></g><g><title>__contains__ (pandas/core/indexes/numeric.py:207) (106 samples, 2.79%)</title><rect x="53.3351%" y="180" width="2.7946%" height="15" fill="rgb(240,68,47)" fg:x="2023" fg:w="106"/><text x="53.5851%" y="190.50">__..</text></g><g><title>__getitem__ (pandas/core/frame.py:3425) (95 samples, 2.50%)</title><rect x="56.1297%" y="164" width="2.5046%" height="15" fill="rgb(210,16,53)" fg:x="2129" fg:w="95"/><text x="56.3797%" y="174.50">__..</text></g><g><title>_get_item_cache (pandas/core/frame.py:3873) (19 samples, 0.50%)</title><rect x="60.0844%" y="180" width="0.5009%" height="15" fill="rgb(235,124,12)" fg:x="2279" fg:w="19"/><text x="60.3344%" y="190.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:3874) (43 samples, 1.13%)</title><rect x="60.5853%" y="180" width="1.1337%" height="15" fill="rgb(224,169,11)" fg:x="2298" fg:w="43"/><text x="60.8353%" y="190.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:3875) (8 samples, 0.21%)</title><rect x="61.7190%" y="180" width="0.2109%" height="15" fill="rgb(250,166,2)" fg:x="2341" fg:w="8"/><text x="61.9690%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:3427) (128 samples, 3.37%)</title><rect x="58.6343%" y="164" width="3.3746%" height="15" fill="rgb(242,216,29)" fg:x="2224" fg:w="128"/><text x="58.8843%" y="174.50">__g..</text></g><g><title>apply_if_callable (pandas/core/common.py:346) (4 samples, 0.11%)</title><rect x="63.6963%" y="180" width="0.1055%" height="15" fill="rgb(230,116,27)" fg:x="2416" fg:w="4"/><text x="63.9463%" y="190.50"></text></g><g><title>apply_if_callable (pandas/core/common.py:357) (25 samples, 0.66%)</title><rect x="63.8017%" y="180" width="0.6591%" height="15" fill="rgb(228,99,48)" fg:x="2420" fg:w="25"/><text x="64.0517%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/series.py:929) (94 samples, 2.48%)</title><rect x="62.0353%" y="164" width="2.4782%" height="15" fill="rgb(253,11,6)" fg:x="2353" fg:w="94"/><text x="62.2853%" y="174.50">__..</text></g><g><title>__getitem__ (pandas/core/series.py:931) (20 samples, 0.53%)</title><rect x="64.5136%" y="164" width="0.5273%" height="15" fill="rgb(247,143,39)" fg:x="2447" fg:w="20"/><text x="64.7636%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:934) (23 samples, 0.61%)</title><rect x="65.0409%" y="164" width="0.6064%" height="15" fill="rgb(236,97,10)" fg:x="2467" fg:w="23"/><text x="65.2909%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:935) (48 samples, 1.27%)</title><rect x="65.6472%" y="164" width="1.2655%" height="15" fill="rgb(233,208,19)" fg:x="2490" fg:w="48"/><text x="65.8972%" y="174.50"></text></g><g><title>_should_fallback_to_positional (pandas/core/indexes/numeric.py:231) (5 samples, 0.13%)</title><rect x="70.4719%" y="180" width="0.1318%" height="15" fill="rgb(216,164,2)" fg:x="2673" fg:w="5"/><text x="70.7219%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/series.py:938) (148 samples, 3.90%)</title><rect x="66.9127%" y="164" width="3.9019%" height="15" fill="rgb(220,129,5)" fg:x="2538" fg:w="148"/><text x="67.1627%" y="174.50">__ge..</text></g><g><title>_should_fallback_to_positional (pandas/core/indexes/numeric.py:233) (8 samples, 0.21%)</title><rect x="70.6037%" y="180" width="0.2109%" height="15" fill="rgb(242,17,10)" fg:x="2678" fg:w="8"/><text x="70.8537%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/series.py:941) (8 samples, 0.21%)</title><rect x="70.8147%" y="164" width="0.2109%" height="15" fill="rgb(242,107,0)" fg:x="2686" fg:w="8"/><text x="71.0647%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1047) (10 samples, 0.26%)</title><rect x="72.7129%" y="180" width="0.2636%" height="15" fill="rgb(251,28,31)" fg:x="2758" fg:w="10"/><text x="72.9629%" y="190.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3353) (11 samples, 0.29%)</title><rect x="75.2966%" y="196" width="0.2900%" height="15" fill="rgb(233,223,10)" fg:x="2856" fg:w="11"/><text x="75.5466%" y="206.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3354) (6 samples, 0.16%)</title><rect x="75.5866%" y="196" width="0.1582%" height="15" fill="rgb(215,21,27)" fg:x="2867" fg:w="6"/><text x="75.8366%" y="206.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:5701) (100 samples, 2.64%)</title><rect x="76.5621%" y="212" width="2.6364%" height="15" fill="rgb(232,23,21)" fg:x="2904" fg:w="100"/><text x="76.8121%" y="222.50">_m..</text></g><g><title>is_floating (pandas/core/indexes/base.py:2172) (67 samples, 1.77%)</title><rect x="77.4321%" y="228" width="1.7664%" height="15" fill="rgb(244,5,23)" fg:x="2937" fg:w="67"/><text x="77.6821%" y="238.50"></text></g><g><title>cast_scalar_indexer (pandas/core/common.py:170) (53 samples, 1.40%)</title><rect x="81.0704%" y="228" width="1.3973%" height="15" fill="rgb(226,81,46)" fg:x="3075" fg:w="53"/><text x="81.3204%" y="238.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3359) (258 samples, 6.80%)</title><rect x="75.7448%" y="196" width="6.8020%" height="15" fill="rgb(247,70,30)" fg:x="2873" fg:w="258"/><text x="75.9948%" y="206.50">get_loc (..</text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/base.py:5702) (127 samples, 3.35%)</title><rect x="79.1985%" y="212" width="3.3483%" height="15" fill="rgb(212,68,19)" fg:x="3004" fg:w="127"/><text x="79.4485%" y="222.50">_ma..</text></g><g><title>_get_value (pandas/core/series.py:1051) (512 samples, 13.50%)</title><rect x="72.9765%" y="180" width="13.4985%" height="15" fill="rgb(240,187,13)" fg:x="2768" fg:w="512"/><text x="73.2265%" y="190.50">_get_value (pandas/c..</text></g><g><title>get_loc (pandas/core/indexes/base.py:3361) (147 samples, 3.88%)</title><rect x="82.5995%" y="196" width="3.8756%" height="15" fill="rgb(223,113,26)" fg:x="3133" fg:w="147"/><text x="82.8495%" y="206.50">get_..</text></g><g><title>_get_values_for_loc (pandas/core/indexes/base.py:5184) (22 samples, 0.58%)</title><rect x="89.1115%" y="196" width="0.5800%" height="15" fill="rgb(206,192,2)" fg:x="3380" fg:w="22"/><text x="89.3615%" y="206.50"></text></g><g><title>breath_first_search (breadth_first_search.py:188) (3,175 samples, 83.71%)</title><rect x="12.5494%" y="132" width="83.7068%" height="15" fill="rgb(241,108,4)" fg:x="476" fg:w="3175"/><text x="12.7994%" y="142.50">breath_first_search (breadth_first_search.py:188)</text></g><g><title>is_not_barrier (breadth_first_search.py:141) (2,717 samples, 71.63%)</title><rect x="24.6243%" y="148" width="71.6320%" height="15" fill="rgb(247,173,49)" fg:x="934" fg:w="2717"/><text x="24.8743%" y="158.50">is_not_barrier (breadth_first_search.py:141)</text></g><g><title>__getitem__ (pandas/core/series.py:942) (957 samples, 25.23%)</title><rect x="71.0256%" y="164" width="25.2307%" height="15" fill="rgb(224,114,35)" fg:x="2694" fg:w="957"/><text x="71.2756%" y="174.50">__getitem__ (pandas/core/series.py:942)</text></g><g><title>_get_value (pandas/core/series.py:1052) (371 samples, 9.78%)</title><rect x="86.4751%" y="180" width="9.7812%" height="15" fill="rgb(245,159,27)" fg:x="3280" fg:w="371"/><text x="86.7251%" y="190.50">_get_value (pa..</text></g><g><title>_get_values_for_loc (pandas/core/indexes/base.py:5185) (249 samples, 6.56%)</title><rect x="89.6915%" y="196" width="6.5647%" height="15" fill="rgb(245,172,44)" fg:x="3402" fg:w="249"/><text x="89.9415%" y="206.50">_get_valu..</text></g><g><title>_values (pandas/core/series.py:706) (136 samples, 3.59%)</title><rect x="92.6707%" y="212" width="3.5856%" height="15" fill="rgb(236,23,11)" fg:x="3515" fg:w="136"/><text x="92.9207%" y="222.50">_val..</text></g><g><title>internal_values (pandas/core/internals/managers.py:1676) (92 samples, 2.43%)</title><rect x="93.8307%" y="228" width="2.4255%" height="15" fill="rgb(205,117,38)" fg:x="3559" fg:w="92"/><text x="94.0807%" y="238.50">in..</text></g><g><title>_block (pandas/core/internals/managers.py:1621) (23 samples, 0.61%)</title><rect x="95.6499%" y="244" width="0.6064%" height="15" fill="rgb(237,72,25)" fg:x="3628" fg:w="23"/><text x="95.8999%" y="254.50"></text></g><g><title>breath_first_search (breadth_first_search.py:189) (57 samples, 1.50%)</title><rect x="96.2563%" y="132" width="1.5028%" height="15" fill="rgb(244,70,9)" fg:x="3651" fg:w="57"/><text x="96.5063%" y="142.50"></text></g><g><title>breath_first_search (breadth_first_search.py:190) (21 samples, 0.55%)</title><rect x="97.7590%" y="132" width="0.5537%" height="15" fill="rgb(217,125,39)" fg:x="3708" fg:w="21"/><text x="98.0090%" y="142.50"></text></g><g><title>put (breadth_first_search.py:167) (14 samples, 0.37%)</title><rect x="97.9436%" y="148" width="0.3691%" height="15" fill="rgb(235,36,10)" fg:x="3715" fg:w="14"/><text x="98.1936%" y="158.50"></text></g><g><title>find_path (breadth_first_search.py:48) (3,333 samples, 87.87%)</title><rect x="10.8358%" y="116" width="87.8724%" height="15" fill="rgb(251,123,47)" fg:x="411" fg:w="3333"/><text x="11.0858%" y="126.50">find_path (breadth_first_search.py:48)</text></g><g><title>breath_first_search (breadth_first_search.py:191) (15 samples, 0.40%)</title><rect x="98.3127%" y="132" width="0.3955%" height="15" fill="rgb(221,13,13)" fg:x="3729" fg:w="15"/><text x="98.5627%" y="142.50"></text></g><g><title>walk (breadth_first_search.py:87) (3,664 samples, 96.60%)</title><rect x="2.1619%" y="100" width="96.5990%" height="15" fill="rgb(238,131,9)" fg:x="82" fg:w="3664"/><text x="2.4119%" y="110.50">walk (breadth_first_search.py:87)</text></g><g><title>main (breadth_first_search.py:299) (3,666 samples, 96.65%)</title><rect x="2.1355%" y="84" width="96.6517%" height="15" fill="rgb(211,50,8)" fg:x="81" fg:w="3666"/><text x="2.3855%" y="94.50">main (breadth_first_search.py:299)</text></g><g><title>&lt;module&gt; (breadth_first_search.py:321) (3,748 samples, 98.81%)</title><rect x="0.0000%" y="68" width="98.8136%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="3748"/><text x="0.2500%" y="78.50">&lt;module&gt; (breadth_first_search.py:321)</text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (5 samples, 0.13%)</title><rect x="98.8927%" y="644" width="0.1318%" height="15" fill="rgb(242,14,37)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (5 samples, 0.13%)</title><rect x="98.8927%" y="660" width="0.1318%" height="15" fill="rgb(246,228,12)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (5 samples, 0.13%)</title><rect x="98.8927%" y="676" width="0.1318%" height="15" fill="rgb(213,55,15)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:657) (5 samples, 0.13%)</title><rect x="98.8927%" y="692" width="0.1318%" height="15" fill="rgb(209,9,3)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="702.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:556) (5 samples, 0.13%)</title><rect x="98.8927%" y="708" width="0.1318%" height="15" fill="rgb(230,59,30)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="718.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1101) (5 samples, 0.13%)</title><rect x="98.8927%" y="724" width="0.1318%" height="15" fill="rgb(209,121,21)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.13%)</title><rect x="98.8927%" y="740" width="0.1318%" height="15" fill="rgb(220,109,13)" fg:x="3751" fg:w="5"/><text x="99.1427%" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:21) (4 samples, 0.11%)</title><rect x="99.0245%" y="916" width="0.1055%" height="15" fill="rgb(232,18,1)" fg:x="3756" fg:w="4"/><text x="99.2745%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.11%)</title><rect x="99.0245%" y="932" width="0.1055%" height="15" fill="rgb(215,41,42)" fg:x="3756" fg:w="4"/><text x="99.2745%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.11%)</title><rect x="99.0245%" y="948" width="0.1055%" height="15" fill="rgb(224,123,36)" fg:x="3756" fg:w="4"/><text x="99.2745%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.11%)</title><rect x="99.0245%" y="964" width="0.1055%" height="15" fill="rgb(240,125,3)" fg:x="3756" fg:w="4"/><text x="99.2745%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (4 samples, 0.11%)</title><rect x="99.0245%" y="980" width="0.1055%" height="15" fill="rgb(205,98,50)" fg:x="3756" fg:w="4"/><text x="99.2745%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.11%)</title><rect x="99.0245%" y="996" width="0.1055%" height="15" fill="rgb(205,185,37)" fg:x="3756" fg:w="4"/><text x="99.2745%" y="1006.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:12) (11 samples, 0.29%)</title><rect x="98.8927%" y="516" width="0.2900%" height="15" fill="rgb(238,207,15)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (11 samples, 0.29%)</title><rect x="98.8927%" y="532" width="0.2900%" height="15" fill="rgb(213,199,42)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.29%)</title><rect x="98.8927%" y="548" width="0.2900%" height="15" fill="rgb(235,201,11)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (11 samples, 0.29%)</title><rect x="98.8927%" y="564" width="0.2900%" height="15" fill="rgb(207,46,11)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (11 samples, 0.29%)</title><rect x="98.8927%" y="580" width="0.2900%" height="15" fill="rgb(241,35,35)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (11 samples, 0.29%)</title><rect x="98.8927%" y="596" width="0.2900%" height="15" fill="rgb(243,32,47)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (11 samples, 0.29%)</title><rect x="98.8927%" y="612" width="0.2900%" height="15" fill="rgb(247,202,23)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 0.29%)</title><rect x="98.8927%" y="628" width="0.2900%" height="15" fill="rgb(219,102,11)" fg:x="3751" fg:w="11"/><text x="99.1427%" y="638.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (6 samples, 0.16%)</title><rect x="99.0245%" y="644" width="0.1582%" height="15" fill="rgb(243,110,44)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.16%)</title><rect x="99.0245%" y="660" width="0.1582%" height="15" fill="rgb(222,74,54)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:961) (6 samples, 0.16%)</title><rect x="99.0245%" y="676" width="0.1582%" height="15" fill="rgb(216,99,12)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.0245%" y="692" width="0.1582%" height="15" fill="rgb(226,22,26)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.16%)</title><rect x="99.0245%" y="708" width="0.1582%" height="15" fill="rgb(217,163,10)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.16%)</title><rect x="99.0245%" y="724" width="0.1582%" height="15" fill="rgb(213,25,53)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.16%)</title><rect x="99.0245%" y="740" width="0.1582%" height="15" fill="rgb(252,105,26)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (6 samples, 0.16%)</title><rect x="99.0245%" y="756" width="0.1582%" height="15" fill="rgb(220,39,43)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.0245%" y="772" width="0.1582%" height="15" fill="rgb(229,68,48)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="782.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:12) (6 samples, 0.16%)</title><rect x="99.0245%" y="788" width="0.1582%" height="15" fill="rgb(252,8,32)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="798.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (6 samples, 0.16%)</title><rect x="99.0245%" y="804" width="0.1582%" height="15" fill="rgb(223,20,43)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.0245%" y="820" width="0.1582%" height="15" fill="rgb(229,81,49)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.16%)</title><rect x="99.0245%" y="836" width="0.1582%" height="15" fill="rgb(236,28,36)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.16%)</title><rect x="99.0245%" y="852" width="0.1582%" height="15" fill="rgb(249,185,26)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.16%)</title><rect x="99.0245%" y="868" width="0.1582%" height="15" fill="rgb(249,174,33)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (6 samples, 0.16%)</title><rect x="99.0245%" y="884" width="0.1582%" height="15" fill="rgb(233,201,37)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.0245%" y="900" width="0.1582%" height="15" fill="rgb(221,78,26)" fg:x="3756" fg:w="6"/><text x="99.2745%" y="910.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:22) (12 samples, 0.32%)</title><rect x="98.8927%" y="388" width="0.3164%" height="15" fill="rgb(250,127,30)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (12 samples, 0.32%)</title><rect x="98.8927%" y="404" width="0.3164%" height="15" fill="rgb(230,49,44)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.32%)</title><rect x="98.8927%" y="420" width="0.3164%" height="15" fill="rgb(229,67,23)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (12 samples, 0.32%)</title><rect x="98.8927%" y="436" width="0.3164%" height="15" fill="rgb(249,83,47)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (12 samples, 0.32%)</title><rect x="98.8927%" y="452" width="0.3164%" height="15" fill="rgb(215,43,3)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (12 samples, 0.32%)</title><rect x="98.8927%" y="468" width="0.3164%" height="15" fill="rgb(238,154,13)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (12 samples, 0.32%)</title><rect x="98.8927%" y="484" width="0.3164%" height="15" fill="rgb(219,56,2)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.32%)</title><rect x="98.8927%" y="500" width="0.3164%" height="15" fill="rgb(233,0,4)" fg:x="3751" fg:w="12"/><text x="99.1427%" y="510.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (20 samples, 0.53%)</title><rect x="98.8663%" y="260" width="0.5273%" height="15" fill="rgb(235,30,7)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (20 samples, 0.53%)</title><rect x="98.8663%" y="276" width="0.5273%" height="15" fill="rgb(250,79,13)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 0.53%)</title><rect x="98.8663%" y="292" width="0.5273%" height="15" fill="rgb(211,146,34)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (20 samples, 0.53%)</title><rect x="98.8663%" y="308" width="0.5273%" height="15" fill="rgb(228,22,38)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (20 samples, 0.53%)</title><rect x="98.8663%" y="324" width="0.5273%" height="15" fill="rgb(235,168,5)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (20 samples, 0.53%)</title><rect x="98.8663%" y="340" width="0.5273%" height="15" fill="rgb(221,155,16)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (20 samples, 0.53%)</title><rect x="98.8663%" y="356" width="0.5273%" height="15" fill="rgb(215,215,53)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 0.53%)</title><rect x="98.8663%" y="372" width="0.5273%" height="15" fill="rgb(223,4,10)" fg:x="3750" fg:w="20"/><text x="99.1163%" y="382.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:99) (4 samples, 0.11%)</title><rect x="99.2882%" y="388" width="0.1055%" height="15" fill="rgb(234,103,6)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1042) (4 samples, 0.11%)</title><rect x="99.2882%" y="404" width="0.1055%" height="15" fill="rgb(227,97,0)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.11%)</title><rect x="99.2882%" y="420" width="0.1055%" height="15" fill="rgb(234,150,53)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.11%)</title><rect x="99.2882%" y="436" width="0.1055%" height="15" fill="rgb(228,201,54)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.11%)</title><rect x="99.2882%" y="452" width="0.1055%" height="15" fill="rgb(222,22,37)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.11%)</title><rect x="99.2882%" y="468" width="0.1055%" height="15" fill="rgb(237,53,32)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (4 samples, 0.11%)</title><rect x="99.2882%" y="484" width="0.1055%" height="15" fill="rgb(233,25,53)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.11%)</title><rect x="99.2882%" y="500" width="0.1055%" height="15" fill="rgb(210,40,34)" fg:x="3766" fg:w="4"/><text x="99.5382%" y="510.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:11) (28 samples, 0.74%)</title><rect x="98.8136%" y="164" width="0.7382%" height="15" fill="rgb(241,220,44)" fg:x="3748" fg:w="28"/><text x="99.0636%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (28 samples, 0.74%)</title><rect x="98.8136%" y="180" width="0.7382%" height="15" fill="rgb(235,28,35)" fg:x="3748" fg:w="28"/><text x="99.0636%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (27 samples, 0.71%)</title><rect x="98.8400%" y="196" width="0.7118%" height="15" fill="rgb(210,56,17)" fg:x="3749" fg:w="27"/><text x="99.0900%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (27 samples, 0.71%)</title><rect x="98.8400%" y="212" width="0.7118%" height="15" fill="rgb(224,130,29)" fg:x="3749" fg:w="27"/><text x="99.0900%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (27 samples, 0.71%)</title><rect x="98.8400%" y="228" width="0.7118%" height="15" fill="rgb(235,212,8)" fg:x="3749" fg:w="27"/><text x="99.0900%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (27 samples, 0.71%)</title><rect x="98.8400%" y="244" width="0.7118%" height="15" fill="rgb(223,33,50)" fg:x="3749" fg:w="27"/><text x="99.0900%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:29) (6 samples, 0.16%)</title><rect x="99.6836%" y="260" width="0.1582%" height="15" fill="rgb(219,149,13)" fg:x="3781" fg:w="6"/><text x="99.9336%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.16%)</title><rect x="99.6836%" y="276" width="0.1582%" height="15" fill="rgb(250,156,29)" fg:x="3781" fg:w="6"/><text x="99.9336%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.16%)</title><rect x="99.6836%" y="292" width="0.1582%" height="15" fill="rgb(216,193,19)" fg:x="3781" fg:w="6"/><text x="99.9336%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.16%)</title><rect x="99.6836%" y="308" width="0.1582%" height="15" fill="rgb(216,135,14)" fg:x="3781" fg:w="6"/><text x="99.9336%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (6 samples, 0.16%)</title><rect x="99.6836%" y="324" width="0.1582%" height="15" fill="rgb(241,47,5)" fg:x="3781" fg:w="6"/><text x="99.9336%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.6836%" y="340" width="0.1582%" height="15" fill="rgb(233,42,35)" fg:x="3781" fg:w="6"/><text x="99.9336%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:73) (4 samples, 0.11%)</title><rect x="99.8682%" y="452" width="0.1055%" height="15" fill="rgb(231,13,6)" fg:x="3788" fg:w="4"/><text x="100.1182%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (4 samples, 0.11%)</title><rect x="99.8682%" y="468" width="0.1055%" height="15" fill="rgb(207,181,40)" fg:x="3788" fg:w="4"/><text x="100.1182%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (4 samples, 0.11%)</title><rect x="99.8682%" y="484" width="0.1055%" height="15" fill="rgb(254,173,49)" fg:x="3788" fg:w="4"/><text x="100.1182%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (4 samples, 0.11%)</title><rect x="99.8682%" y="500" width="0.1055%" height="15" fill="rgb(221,1,38)" fg:x="3788" fg:w="4"/><text x="100.1182%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (4 samples, 0.11%)</title><rect x="99.8682%" y="516" width="0.1055%" height="15" fill="rgb(206,124,46)" fg:x="3788" fg:w="4"/><text x="100.1182%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.11%)</title><rect x="99.8682%" y="532" width="0.1055%" height="15" fill="rgb(249,21,11)" fg:x="3788" fg:w="4"/><text x="100.1182%" y="542.50"></text></g><g><title>all (3,793 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(222,201,40)" fg:x="0" fg:w="3793"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (breadth_first_search.py:4) (45 samples, 1.19%)</title><rect x="98.8136%" y="68" width="1.1864%" height="15" fill="rgb(235,61,29)" fg:x="3748" fg:w="45"/><text x="99.0636%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (45 samples, 1.19%)</title><rect x="98.8136%" y="84" width="1.1864%" height="15" fill="rgb(219,207,3)" fg:x="3748" fg:w="45"/><text x="99.0636%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (45 samples, 1.19%)</title><rect x="98.8136%" y="100" width="1.1864%" height="15" fill="rgb(222,56,46)" fg:x="3748" fg:w="45"/><text x="99.0636%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (45 samples, 1.19%)</title><rect x="98.8136%" y="116" width="1.1864%" height="15" fill="rgb(239,76,54)" fg:x="3748" fg:w="45"/><text x="99.0636%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (45 samples, 1.19%)</title><rect x="98.8136%" y="132" width="1.1864%" height="15" fill="rgb(231,124,27)" fg:x="3748" fg:w="45"/><text x="99.0636%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (45 samples, 1.19%)</title><rect x="98.8136%" y="148" width="1.1864%" height="15" fill="rgb(249,195,6)" fg:x="3748" fg:w="45"/><text x="99.0636%" y="158.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:50) (12 samples, 0.32%)</title><rect x="99.6836%" y="164" width="0.3164%" height="15" fill="rgb(237,174,47)" fg:x="3781" fg:w="12"/><text x="99.9336%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (12 samples, 0.32%)</title><rect x="99.6836%" y="180" width="0.3164%" height="15" fill="rgb(206,201,31)" fg:x="3781" fg:w="12"/><text x="99.9336%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (12 samples, 0.32%)</title><rect x="99.6836%" y="196" width="0.3164%" height="15" fill="rgb(231,57,52)" fg:x="3781" fg:w="12"/><text x="99.9336%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (12 samples, 0.32%)</title><rect x="99.6836%" y="212" width="0.3164%" height="15" fill="rgb(248,177,22)" fg:x="3781" fg:w="12"/><text x="99.9336%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (12 samples, 0.32%)</title><rect x="99.6836%" y="228" width="0.3164%" height="15" fill="rgb(215,211,37)" fg:x="3781" fg:w="12"/><text x="99.9336%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 0.32%)</title><rect x="99.6836%" y="244" width="0.3164%" height="15" fill="rgb(241,128,51)" fg:x="3781" fg:w="12"/><text x="99.9336%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:48) (6 samples, 0.16%)</title><rect x="99.8418%" y="260" width="0.1582%" height="15" fill="rgb(227,165,31)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.16%)</title><rect x="99.8418%" y="276" width="0.1582%" height="15" fill="rgb(228,167,24)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.16%)</title><rect x="99.8418%" y="292" width="0.1582%" height="15" fill="rgb(228,143,12)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.16%)</title><rect x="99.8418%" y="308" width="0.1582%" height="15" fill="rgb(249,149,8)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (6 samples, 0.16%)</title><rect x="99.8418%" y="324" width="0.1582%" height="15" fill="rgb(243,35,44)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.8418%" y="340" width="0.1582%" height="15" fill="rgb(246,89,9)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (6 samples, 0.16%)</title><rect x="99.8418%" y="356" width="0.1582%" height="15" fill="rgb(233,213,13)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:991) (6 samples, 0.16%)</title><rect x="99.8418%" y="372" width="0.1582%" height="15" fill="rgb(233,141,41)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:975) (6 samples, 0.16%)</title><rect x="99.8418%" y="388" width="0.1582%" height="15" fill="rgb(239,167,4)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (6 samples, 0.16%)</title><rect x="99.8418%" y="404" width="0.1582%" height="15" fill="rgb(209,217,16)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:783) (6 samples, 0.16%)</title><rect x="99.8418%" y="420" width="0.1582%" height="15" fill="rgb(219,88,35)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.16%)</title><rect x="99.8418%" y="436" width="0.1582%" height="15" fill="rgb(220,193,23)" fg:x="3787" fg:w="6"/><text x="100.0918%" y="446.50"></text></g></svg></svg>